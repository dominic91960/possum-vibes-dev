name: Deploy Possum Vibes

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to DockerHub
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Check for existing image (for caching)
      - name: Check existing image
        id: check-image
        run: |
          if docker manifest inspect ${{ secrets.DOCKERHUB_USERNAME }}/possum-vibes:latest > /dev/null 2>&1; then
            echo "image_exists=true" >> $GITHUB_OUTPUT
          else
            echo "image_exists=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      # 5. Build & push Docker image
      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/possum-vibes:latest
          build-args: |
            NEXT_PUBLIC_SOLANATRACKER_API_KEY=${{ secrets.NEXT_PUBLIC_SOLANATRACKER_API_KEY }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/possum-vibes:latest
          cache-to: type=inline

  deploy-to-vps:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository (for docker-compose file if needed)
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Write SSH key and set permissions
      - name: Setup SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key      # 3. SSH into VPS and deploy
      - name: Deploy to VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          ssh -i private_key -o StrictHostKeyChecking=no root@$VPS_HOST << 'EOF'
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/possum-vibes:latest
            
            # Stop the existing container if it's running
            docker stop possum-vibes-container || true
            docker rm possum-vibes-container || true
            
            # Run the new container
            docker run -d \
              --name possum-vibes-container \
              -p 3000:3000 \
              --restart unless-stopped \
              ${{ secrets.DOCKERHUB_USERNAME }}/possum-vibes:latest
              
            # Clean up older images to save space
            docker system prune -af
          EOF

      # 4. Cleanup the private key
      - name: Cleanup private key
        run: rm -f private_key
